{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = localStorage.getItem(\"theme\") || \"light\";\nconst themeSlice = createSlice({\n  name: \"theme\",\n  initialState,\n  reducers: {\n    toggleTheme: state => {\n      const newTheme = state === \"light\" ? \"dark\" : \"light\";\n      localStorage.setItem(\"theme\", newTheme);\n      return newTheme;\n    }\n  }\n});\nexport const {\n  toggleTheme\n} = themeSlice.actions;\nexport default themeSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","localStorage","getItem","themeSlice","name","reducers","toggleTheme","state","newTheme","setItem","actions","reducer"],"sources":["D:/to-do/frontend/src/features/theme/themeSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = localStorage.getItem(\"theme\") || \"light\";\r\n\r\nconst themeSlice = createSlice({\r\n  name: \"theme\",\r\n  initialState,\r\n  reducers: {\r\n    toggleTheme: (state) => {\r\n      const newTheme = state === \"light\" ? \"dark\" : \"light\";\r\n      localStorage.setItem(\"theme\", newTheme);\r\n      return newTheme;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleTheme } = themeSlice.actions;\r\nexport default themeSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO;AAE7D,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,WAAW,EAAGC,KAAK,IAAK;MACtB,MAAMC,QAAQ,GAAGD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;MACrDN,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;MACvC,OAAOA,QAAQ;IACjB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF;AAAY,CAAC,GAAGH,UAAU,CAACO,OAAO;AACjD,eAAeP,UAAU,CAACQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}