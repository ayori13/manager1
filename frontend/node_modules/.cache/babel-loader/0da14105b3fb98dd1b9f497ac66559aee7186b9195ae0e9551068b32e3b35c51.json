{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst todosSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodos = [...state, action.payload];\n      localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n      return newTodos;\n    },\n    removeTodo: (state, action) => {\n      const updatedTodos = state.filter(todo => todo.id !== action.payload);\n      localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n      return updatedTodos;\n    },\n    toggleTodo: (state, action) => {\n      const updatedTodos = state.map(todo => todo.id === action.payload ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n      localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n      return updatedTodos;\n    }\n  }\n});\nexport const {\n  addTodo,\n  removeTodo,\n  toggleTodo\n} = todosSlice.actions;\nexport default todosSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","todosSlice","name","reducers","addTodo","state","action","newTodos","payload","localStorage","setItem","JSON","stringify","removeTodo","updatedTodos","filter","todo","id","toggleTodo","map","completed","actions","reducer"],"sources":["D:/to-do/frontend/src/features/todos/todosSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst todosSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState,\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      const newTodos = [...state, action.payload];\r\n      localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n      return newTodos;\r\n    },\r\n    removeTodo: (state, action) => {\r\n      const updatedTodos = state.filter(todo => todo.id !== action.payload);\r\n      localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\r\n      return updatedTodos;\r\n    },\r\n    toggleTodo: (state, action) => {\r\n      const updatedTodos = state.map(todo =>\r\n        todo.id === action.payload ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n      localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\r\n      return updatedTodos;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTodo, removeTodo, toggleTodo } = todosSlice.actions;\r\nexport default todosSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,OAAO;EACbF,YAAY;EACZG,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,QAAQ,GAAG,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;MAC3CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;MACvD,OAAOA,QAAQ;IACjB,CAAC;IACDM,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMQ,YAAY,GAAGT,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKX,MAAM,CAACE,OAAO,CAAC;MACrEC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACE,YAAY,CAAC,CAAC;MAC3D,OAAOA,YAAY;IACrB,CAAC;IACDI,UAAU,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMQ,YAAY,GAAGT,KAAK,CAACc,GAAG,CAACH,IAAI,IACjCA,IAAI,CAACC,EAAE,KAAKX,MAAM,CAACE,OAAO,GAAG;QAAE,GAAGQ,IAAI;QAAEI,SAAS,EAAE,CAACJ,IAAI,CAACI;MAAU,CAAC,GAAGJ,IACzE,CAAC;MACDP,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACE,YAAY,CAAC,CAAC;MAC3D,OAAOA,YAAY;IACrB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV,OAAO;EAAES,UAAU;EAAEK;AAAW,CAAC,GAAGjB,UAAU,CAACoB,OAAO;AACrE,eAAepB,UAAU,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}